# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/firebase/database/v1/events.proto

require 'google/protobuf'

require 'google/events/cloudevent_pb'
require 'google/events/firebase/database/v1/data_pb'


descriptor_data = "\n/google/events/firebase/database/v1/events.proto\x12\"google.events.firebase.database.v1\x1a\x1egoogle/events/cloudevent.proto\x1a-google/events/firebase/database/v1/data.proto\"\x8b\x01\n\x15ReferenceCreatedEvent\x12\x44\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x36.google.events.firebase.database.v1.ReferenceEventData:,\xb2\xf8\xd8,\'google.firebase.database.ref.v1.created\"\x8b\x01\n\x15ReferenceUpdatedEvent\x12\x44\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x36.google.events.firebase.database.v1.ReferenceEventData:,\xb2\xf8\xd8,\'google.firebase.database.ref.v1.updated\"\x8b\x01\n\x15ReferenceDeletedEvent\x12\x44\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x36.google.events.firebase.database.v1.ReferenceEventData:,\xb2\xf8\xd8,\'google.firebase.database.ref.v1.deleted\"\x8b\x01\n\x15ReferenceWrittenEvent\x12\x44\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x36.google.events.firebase.database.v1.ReferenceEventData:,\xb2\xf8\xd8,\'google.firebase.database.ref.v1.writtenB\xc8\x03\xaa\x02+Google.Events.Protobuf.Firebase.Database.V1\xca\x02\"Google\\Events\\Firebase\\Database\\V1\xea\x02&Google::Events::Firebase::Database::V1\xba\xf8\xd8,\x1a\x46irebase Realtime Database\xc2\xf8\xd8,a\n\x08instance\x12KThe Firebase Realtime Database instance from which the event was triggered.\x1a\x08instance\xc2\xf8\xd8,R\n\x03ref\x12\x46The Firebase Realtime Database path for which the event was triggered.\x1a\x03ref\xc2\xf8\xd8,k\n\x14\x66irebasedatabasehost\x12=The Firebase Realtime Database domain of the source database.\x1a\x14\x66irebaseDatabaseHostb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.events.firebase.database.v1.ReferenceEventData", "google/events/firebase/database/v1/data.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Events
    module Firebase
      module Database
        module V1
          ReferenceCreatedEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.database.v1.ReferenceCreatedEvent").msgclass
          ReferenceUpdatedEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.database.v1.ReferenceUpdatedEvent").msgclass
          ReferenceDeletedEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.database.v1.ReferenceDeletedEvent").msgclass
          ReferenceWrittenEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.database.v1.ReferenceWrittenEvent").msgclass
        end
      end
    end
  end
end
