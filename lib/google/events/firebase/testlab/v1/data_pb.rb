# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/firebase/testlab/v1/data.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'


descriptor_data = "\n,google/events/firebase/testlab/v1/data.proto\x12!google.events.firebase.testlab.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x95\x03\n\x13TestMatrixEventData\x12/\n\x0b\x63reate_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12;\n\x05state\x18\x02 \x01(\x0e\x32,.google.events.firebase.testlab.v1.TestState\x12\x1e\n\x16invalid_matrix_details\x18\x03 \x01(\t\x12J\n\x0foutcome_summary\x18\x04 \x01(\x0e\x32\x31.google.events.firebase.testlab.v1.OutcomeSummary\x12H\n\x0eresult_storage\x18\x05 \x01(\x0b\x32\x30.google.events.firebase.testlab.v1.ResultStorage\x12\x42\n\x0b\x63lient_info\x18\x06 \x01(\x0b\x32-.google.events.firebase.testlab.v1.ClientInfo\x12\x16\n\x0etest_matrix_id\x18\x07 \x01(\t\"\x99\x01\n\nClientInfo\x12\x0e\n\x06\x63lient\x18\x01 \x01(\t\x12K\n\x07\x64\x65tails\x18\x02 \x03(\x0b\x32:.google.events.firebase.testlab.v1.ClientInfo.DetailsEntry\x1a.\n\x0c\x44\x65tailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"t\n\rResultStorage\x12\x1c\n\x14tool_results_history\x18\x01 \x01(\t\x12\x1e\n\x16tool_results_execution\x18\x02 \x01(\t\x12\x13\n\x0bresults_uri\x18\x03 \x01(\t\x12\x10\n\x08gcs_path\x18\x04 \x01(\t*j\n\tTestState\x12\x1a\n\x16TEST_STATE_UNSPECIFIED\x10\x00\x12\x0e\n\nVALIDATING\x10\x01\x12\x0b\n\x07PENDING\x10\x02\x12\x0c\n\x08\x46INISHED\x10\x03\x12\t\n\x05\x45RROR\x10\x04\x12\x0b\n\x07INVALID\x10\x05*j\n\x0eOutcomeSummary\x12\x1f\n\x1bOUTCOME_SUMMARY_UNSPECIFIED\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\x0b\n\x07\x46\x41ILURE\x10\x02\x12\x10\n\x0cINCONCLUSIVE\x10\x03\x12\x0b\n\x07SKIPPED\x10\x04\x42\xad\x01\n%com.google.events.firebase.testlab.v1B\tDataProtoP\x01\xaa\x02*Google.Events.Protobuf.Firebase.TestLab.V1\xca\x02!Google\\Events\\Firebase\\TestLab\\V1\xea\x02%Google::Events::Firebase::TestLab::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Events
    module Firebase
      module TestLab
        module V1
          TestMatrixEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.testlab.v1.TestMatrixEventData").msgclass
          ClientInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.testlab.v1.ClientInfo").msgclass
          ResultStorage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.testlab.v1.ResultStorage").msgclass
          TestState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.testlab.v1.TestState").enummodule
          OutcomeSummary = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.firebase.testlab.v1.OutcomeSummary").enummodule
        end
      end
    end
  end
end
