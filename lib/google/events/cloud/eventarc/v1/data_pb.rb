# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/cloud/eventarc/v1/data.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
require 'google/rpc/code_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("google/events/cloud/eventarc/v1/data.proto", :syntax => :proto3) do
    add_message "google.events.cloud.eventarc.v1.Channel" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :create_time, :message, 5, "google.protobuf.Timestamp"
      optional :update_time, :message, 6, "google.protobuf.Timestamp"
      optional :provider, :string, 7
      optional :state, :enum, 9, "google.events.cloud.eventarc.v1.Channel.State"
      optional :activation_token, :string, 10
      optional :crypto_key_name, :string, 11
      oneof :transport do
        optional :pubsub_topic, :string, 8
      end
    end
    add_enum "google.events.cloud.eventarc.v1.Channel.State" do
      value :STATE_UNSPECIFIED, 0
      value :PENDING, 1
      value :ACTIVE, 2
      value :INACTIVE, 3
    end
    add_message "google.events.cloud.eventarc.v1.ChannelConnection" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :channel, :string, 5
      optional :create_time, :message, 6, "google.protobuf.Timestamp"
      optional :update_time, :message, 7, "google.protobuf.Timestamp"
    end
    add_message "google.events.cloud.eventarc.v1.Trigger" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :create_time, :message, 5, "google.protobuf.Timestamp"
      optional :update_time, :message, 6, "google.protobuf.Timestamp"
      repeated :event_filters, :message, 8, "google.events.cloud.eventarc.v1.EventFilter"
      optional :service_account, :string, 9
      optional :destination, :message, 10, "google.events.cloud.eventarc.v1.Destination"
      optional :transport, :message, 11, "google.events.cloud.eventarc.v1.Transport"
      map :labels, :string, :string, 12
      optional :channel, :string, 13
      map :conditions, :string, :message, 15, "google.events.cloud.eventarc.v1.StateCondition"
      optional :event_data_content_type, :string, 16
      optional :etag, :string, 99
    end
    add_message "google.events.cloud.eventarc.v1.EventFilter" do
      optional :attribute, :string, 1
      optional :value, :string, 2
      optional :operator, :string, 3
    end
    add_message "google.events.cloud.eventarc.v1.StateCondition" do
      optional :code, :enum, 1, "google.rpc.Code"
      optional :message, :string, 2
    end
    add_message "google.events.cloud.eventarc.v1.Destination" do
      oneof :descriptor do
        optional :cloud_run, :message, 1, "google.events.cloud.eventarc.v1.CloudRun"
        optional :cloud_function, :string, 2
        optional :gke, :message, 3, "google.events.cloud.eventarc.v1.GKE"
        optional :workflow, :string, 4
      end
    end
    add_message "google.events.cloud.eventarc.v1.Transport" do
      oneof :intermediary do
        optional :pubsub, :message, 1, "google.events.cloud.eventarc.v1.Pubsub"
      end
    end
    add_message "google.events.cloud.eventarc.v1.CloudRun" do
      optional :service, :string, 1
      optional :path, :string, 2
      optional :region, :string, 3
    end
    add_message "google.events.cloud.eventarc.v1.GKE" do
      optional :cluster, :string, 1
      optional :location, :string, 2
      optional :namespace, :string, 3
      optional :service, :string, 4
      optional :path, :string, 5
    end
    add_message "google.events.cloud.eventarc.v1.Pubsub" do
      optional :topic, :string, 1
      optional :subscription, :string, 2
    end
    add_message "google.events.cloud.eventarc.v1.TriggerEventData" do
      optional :payload, :message, 1, "google.events.cloud.eventarc.v1.Trigger"
    end
    add_message "google.events.cloud.eventarc.v1.ChannelEventData" do
      optional :payload, :message, 1, "google.events.cloud.eventarc.v1.Channel"
    end
    add_message "google.events.cloud.eventarc.v1.ChannelConnectionEventData" do
      optional :payload, :message, 1, "google.events.cloud.eventarc.v1.ChannelConnection"
    end
  end
end

module Google
  module Events
    module Cloud
      module Eventarc
        module V1
          Channel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.Channel").msgclass
          Channel::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.Channel.State").enummodule
          ChannelConnection = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.ChannelConnection").msgclass
          Trigger = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.Trigger").msgclass
          EventFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.EventFilter").msgclass
          StateCondition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.StateCondition").msgclass
          Destination = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.Destination").msgclass
          Transport = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.Transport").msgclass
          CloudRun = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.CloudRun").msgclass
          GKE = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.GKE").msgclass
          Pubsub = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.Pubsub").msgclass
          TriggerEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.TriggerEventData").msgclass
          ChannelEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.ChannelEventData").msgclass
          ChannelConnectionEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.eventarc.v1.ChannelConnectionEventData").msgclass
        end
      end
    end
  end
end
