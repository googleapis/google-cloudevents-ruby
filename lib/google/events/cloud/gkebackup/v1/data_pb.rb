# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/cloud/gkebackup/v1/data.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("google/events/cloud/gkebackup/v1/data.proto", :syntax => :proto3) do
    add_message "google.events.cloud.gkebackup.v1.Namespaces" do
      repeated :namespaces, :string, 1
    end
    add_message "google.events.cloud.gkebackup.v1.NamespacedName" do
      optional :namespace, :string, 1
      optional :name, :string, 2
    end
    add_message "google.events.cloud.gkebackup.v1.NamespacedNames" do
      repeated :namespaced_names, :message, 1, "google.events.cloud.gkebackup.v1.NamespacedName"
    end
    add_message "google.events.cloud.gkebackup.v1.EncryptionKey" do
      optional :gcp_kms_encryption_key, :string, 1
    end
    add_message "google.events.cloud.gkebackup.v1.Backup" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :create_time, :message, 3, "google.protobuf.Timestamp"
      optional :update_time, :message, 4, "google.protobuf.Timestamp"
      optional :manual, :bool, 5
      map :labels, :string, :string, 6
      optional :delete_lock_days, :int32, 7
      optional :delete_lock_expire_time, :message, 8, "google.protobuf.Timestamp"
      optional :retain_days, :int32, 9
      optional :retain_expire_time, :message, 10, "google.protobuf.Timestamp"
      optional :encryption_key, :message, 11, "google.events.cloud.gkebackup.v1.EncryptionKey"
      optional :contains_volume_data, :bool, 15
      optional :contains_secrets, :bool, 16
      optional :cluster_metadata, :message, 17, "google.events.cloud.gkebackup.v1.Backup.ClusterMetadata"
      optional :state, :enum, 18, "google.events.cloud.gkebackup.v1.Backup.State"
      optional :state_reason, :string, 19
      optional :complete_time, :message, 20, "google.protobuf.Timestamp"
      optional :resource_count, :int32, 21
      optional :volume_count, :int32, 22
      optional :size_bytes, :int64, 23
      optional :etag, :string, 24
      optional :description, :string, 25
      optional :pod_count, :int32, 26
      optional :config_backup_size_bytes, :int64, 27
      oneof :backup_scope do
        optional :all_namespaces, :bool, 12
        optional :selected_namespaces, :message, 13, "google.events.cloud.gkebackup.v1.Namespaces"
        optional :selected_applications, :message, 14, "google.events.cloud.gkebackup.v1.NamespacedNames"
      end
    end
    add_message "google.events.cloud.gkebackup.v1.Backup.ClusterMetadata" do
      optional :cluster, :string, 1
      optional :k8s_version, :string, 2
      map :backup_crd_versions, :string, :string, 3
      oneof :platform_version do
        optional :gke_version, :string, 4
        optional :anthos_version, :string, 5
      end
    end
    add_enum "google.events.cloud.gkebackup.v1.Backup.State" do
      value :STATE_UNSPECIFIED, 0
      value :CREATING, 1
      value :IN_PROGRESS, 2
      value :SUCCEEDED, 3
      value :FAILED, 4
      value :DELETING, 5
    end
    add_message "google.events.cloud.gkebackup.v1.BackupPlan" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :create_time, :message, 3, "google.protobuf.Timestamp"
      optional :update_time, :message, 4, "google.protobuf.Timestamp"
      optional :description, :string, 5
      optional :cluster, :string, 6
      optional :retention_policy, :message, 7, "google.events.cloud.gkebackup.v1.BackupPlan.RetentionPolicy"
      map :labels, :string, :string, 8
      optional :backup_schedule, :message, 9, "google.events.cloud.gkebackup.v1.BackupPlan.Schedule"
      optional :etag, :string, 10
      optional :deactivated, :bool, 11
      optional :backup_config, :message, 12, "google.events.cloud.gkebackup.v1.BackupPlan.BackupConfig"
      optional :protected_pod_count, :int32, 13
    end
    add_message "google.events.cloud.gkebackup.v1.BackupPlan.RetentionPolicy" do
      optional :backup_delete_lock_days, :int32, 1
      optional :backup_retain_days, :int32, 2
      optional :locked, :bool, 3
    end
    add_message "google.events.cloud.gkebackup.v1.BackupPlan.Schedule" do
      optional :cron_schedule, :string, 1
      optional :paused, :bool, 2
    end
    add_message "google.events.cloud.gkebackup.v1.BackupPlan.BackupConfig" do
      optional :include_volume_data, :bool, 4
      optional :include_secrets, :bool, 5
      optional :encryption_key, :message, 6, "google.events.cloud.gkebackup.v1.EncryptionKey"
      oneof :backup_scope do
        optional :all_namespaces, :bool, 1
        optional :selected_namespaces, :message, 2, "google.events.cloud.gkebackup.v1.Namespaces"
        optional :selected_applications, :message, 3, "google.events.cloud.gkebackup.v1.NamespacedNames"
      end
    end
    add_message "google.events.cloud.gkebackup.v1.Restore" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :create_time, :message, 3, "google.protobuf.Timestamp"
      optional :update_time, :message, 4, "google.protobuf.Timestamp"
      optional :description, :string, 5
      optional :backup, :string, 6
      optional :cluster, :string, 7
      optional :restore_config, :message, 8, "google.events.cloud.gkebackup.v1.RestoreConfig"
      map :labels, :string, :string, 9
      optional :state, :enum, 10, "google.events.cloud.gkebackup.v1.Restore.State"
      optional :state_reason, :string, 11
      optional :complete_time, :message, 12, "google.protobuf.Timestamp"
      optional :resources_restored_count, :int32, 13
      optional :resources_excluded_count, :int32, 14
      optional :resources_failed_count, :int32, 15
      optional :volumes_restored_count, :int32, 16
      optional :etag, :string, 17
    end
    add_enum "google.events.cloud.gkebackup.v1.Restore.State" do
      value :STATE_UNSPECIFIED, 0
      value :CREATING, 1
      value :IN_PROGRESS, 2
      value :SUCCEEDED, 3
      value :FAILED, 4
      value :DELETING, 5
    end
    add_message "google.events.cloud.gkebackup.v1.RestoreConfig" do
      optional :volume_data_restore_policy, :enum, 1, "google.events.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy"
      optional :cluster_resource_conflict_policy, :enum, 2, "google.events.cloud.gkebackup.v1.RestoreConfig.ClusterResourceConflictPolicy"
      optional :namespaced_resource_restore_mode, :enum, 3, "google.events.cloud.gkebackup.v1.RestoreConfig.NamespacedResourceRestoreMode"
      optional :cluster_resource_restore_scope, :message, 4, "google.events.cloud.gkebackup.v1.RestoreConfig.ClusterResourceRestoreScope"
      repeated :substitution_rules, :message, 8, "google.events.cloud.gkebackup.v1.RestoreConfig.SubstitutionRule"
      oneof :namespaced_resource_restore_scope do
        optional :all_namespaces, :bool, 5
        optional :selected_namespaces, :message, 6, "google.events.cloud.gkebackup.v1.Namespaces"
        optional :selected_applications, :message, 7, "google.events.cloud.gkebackup.v1.NamespacedNames"
      end
    end
    add_message "google.events.cloud.gkebackup.v1.RestoreConfig.GroupKind" do
      optional :resource_group, :string, 1
      optional :resource_kind, :string, 2
    end
    add_message "google.events.cloud.gkebackup.v1.RestoreConfig.ClusterResourceRestoreScope" do
      repeated :selected_group_kinds, :message, 1, "google.events.cloud.gkebackup.v1.RestoreConfig.GroupKind"
    end
    add_message "google.events.cloud.gkebackup.v1.RestoreConfig.SubstitutionRule" do
      repeated :target_namespaces, :string, 1
      repeated :target_group_kinds, :message, 2, "google.events.cloud.gkebackup.v1.RestoreConfig.GroupKind"
      optional :target_json_path, :string, 3
      optional :original_value_pattern, :string, 4
      optional :new_value, :string, 5
    end
    add_enum "google.events.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy" do
      value :VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED, 0
      value :RESTORE_VOLUME_DATA_FROM_BACKUP, 1
      value :REUSE_VOLUME_HANDLE_FROM_BACKUP, 2
      value :NO_VOLUME_DATA_RESTORATION, 3
    end
    add_enum "google.events.cloud.gkebackup.v1.RestoreConfig.ClusterResourceConflictPolicy" do
      value :CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED, 0
      value :USE_EXISTING_VERSION, 1
      value :USE_BACKUP_VERSION, 2
    end
    add_enum "google.events.cloud.gkebackup.v1.RestoreConfig.NamespacedResourceRestoreMode" do
      value :NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED, 0
      value :DELETE_AND_RESTORE, 1
      value :FAIL_ON_CONFLICT, 2
    end
    add_message "google.events.cloud.gkebackup.v1.RestorePlan" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :create_time, :message, 3, "google.protobuf.Timestamp"
      optional :update_time, :message, 4, "google.protobuf.Timestamp"
      optional :description, :string, 5
      optional :backup_plan, :string, 6
      optional :cluster, :string, 7
      optional :restore_config, :message, 8, "google.events.cloud.gkebackup.v1.RestoreConfig"
      map :labels, :string, :string, 9
      optional :etag, :string, 10
    end
    add_message "google.events.cloud.gkebackup.v1.RestorePlanEventData" do
      proto3_optional :payload, :message, 1, "google.events.cloud.gkebackup.v1.RestorePlan"
    end
    add_message "google.events.cloud.gkebackup.v1.BackupEventData" do
      proto3_optional :payload, :message, 1, "google.events.cloud.gkebackup.v1.Backup"
    end
    add_message "google.events.cloud.gkebackup.v1.BackupPlanEventData" do
      proto3_optional :payload, :message, 1, "google.events.cloud.gkebackup.v1.BackupPlan"
    end
    add_message "google.events.cloud.gkebackup.v1.RestoreEventData" do
      proto3_optional :payload, :message, 1, "google.events.cloud.gkebackup.v1.Restore"
    end
  end
end

module Google
  module Events
    module Cloud
      module Gkebackup
        module V1
          Namespaces = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.Namespaces").msgclass
          NamespacedName = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.NamespacedName").msgclass
          NamespacedNames = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.NamespacedNames").msgclass
          EncryptionKey = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.EncryptionKey").msgclass
          Backup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.Backup").msgclass
          Backup::ClusterMetadata = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.Backup.ClusterMetadata").msgclass
          Backup::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.Backup.State").enummodule
          BackupPlan = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.BackupPlan").msgclass
          BackupPlan::RetentionPolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.BackupPlan.RetentionPolicy").msgclass
          BackupPlan::Schedule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.BackupPlan.Schedule").msgclass
          BackupPlan::BackupConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.BackupPlan.BackupConfig").msgclass
          Restore = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.Restore").msgclass
          Restore::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.Restore.State").enummodule
          RestoreConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreConfig").msgclass
          RestoreConfig::GroupKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreConfig.GroupKind").msgclass
          RestoreConfig::ClusterResourceRestoreScope = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreConfig.ClusterResourceRestoreScope").msgclass
          RestoreConfig::SubstitutionRule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreConfig.SubstitutionRule").msgclass
          RestoreConfig::VolumeDataRestorePolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy").enummodule
          RestoreConfig::ClusterResourceConflictPolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreConfig.ClusterResourceConflictPolicy").enummodule
          RestoreConfig::NamespacedResourceRestoreMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreConfig.NamespacedResourceRestoreMode").enummodule
          RestorePlan = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestorePlan").msgclass
          RestorePlanEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestorePlanEventData").msgclass
          BackupEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.BackupEventData").msgclass
          BackupPlanEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.BackupPlanEventData").msgclass
          RestoreEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.gkebackup.v1.RestoreEventData").msgclass
        end
      end
    end
  end
end
