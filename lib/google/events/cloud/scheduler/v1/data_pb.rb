# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/cloud/scheduler/v1/data.proto

require 'google/protobuf'


descriptor_data = "\n+google/events/cloud/scheduler/v1/data.proto\x12 google.events.cloud.scheduler.v1\"\'\n\x10SchedulerJobData\x12\x13\n\x0b\x63ustom_data\x18\x01 \x01(\x0c\x42v\xaa\x02)Google.Events.Protobuf.Cloud.Scheduler.V1\xca\x02 Google\\Events\\Cloud\\Scheduler\\V1\xea\x02$Google::Events::Cloud::Scheduler::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Events
    module Cloud
      module Scheduler
        module V1
          SchedulerJobData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.scheduler.v1.SchedulerJobData").msgclass
        end
      end
    end
  end
end
