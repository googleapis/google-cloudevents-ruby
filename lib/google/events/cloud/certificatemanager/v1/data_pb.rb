# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/cloud/certificatemanager/v1/data.proto

require 'google/protobuf'

require 'google/protobuf/duration_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n4google/events/cloud/certificatemanager/v1/data.proto\x12)google.events.cloud.certificatemanager.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd3\x07\n\x19\x43\x65rtificateIssuanceConfig\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12`\n\x06labels\x18\x04 \x03(\x0b\x32P.google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig.LabelsEntry\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x85\x01\n\x1c\x63\x65rtificate_authority_config\x18\x06 \x01(\x0b\x32_.google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfig\x12+\n\x08lifetime\x18\x07 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\"\n\x1arotation_window_percentage\x18\x08 \x01(\x05\x12h\n\rkey_algorithm\x18\t \x01(\x0e\x32Q.google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig.KeyAlgorithm\x1a\x8f\x02\n\x1a\x43\x65rtificateAuthorityConfig\x12\xb2\x01\n$certificate_authority_service_config\x18\x01 \x01(\x0b\x32\x81\x01.google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfig.CertificateAuthorityServiceConfigH\x00\x1a\x34\n!CertificateAuthorityServiceConfig\x12\x0f\n\x07\x63\x61_pool\x18\x01 \x01(\tB\x06\n\x04kind\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"K\n\x0cKeyAlgorithm\x12\x1d\n\x19KEY_ALGORITHM_UNSPECIFIED\x10\x00\x12\x0c\n\x08RSA_2048\x10\x01\x12\x0e\n\nECDSA_P256\x10\x04\"\xa7\x0f\n\x0b\x43\x65rtificate\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x08 \x01(\t\x12/\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12R\n\x06labels\x18\x04 \x03(\x0b\x32\x42.google.events.cloud.certificatemanager.v1.Certificate.LabelsEntry\x12\x65\n\x0cself_managed\x18\x05 \x01(\x0b\x32M.google.events.cloud.certificatemanager.v1.Certificate.SelfManagedCertificateH\x00\x12\\\n\x07managed\x18\x0b \x01(\x0b\x32I.google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificateH\x00\x12\x14\n\x0csan_dnsnames\x18\x06 \x03(\t\x12\x17\n\x0fpem_certificate\x18\t \x01(\t\x12/\n\x0b\x65xpire_time\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12K\n\x05scope\x18\x0c \x01(\x0e\x32<.google.events.cloud.certificatemanager.v1.Certificate.Scope\x1a\x18\n\x16SelfManagedCertificate\x1a\xd5\t\n\x12ManagedCertificate\x12\x0f\n\x07\x64omains\x18\x01 \x03(\t\x12\x1a\n\x12\x64ns_authorizations\x18\x02 \x03(\t\x12\x17\n\x0fissuance_config\x18\x06 \x01(\t\x12^\n\x05state\x18\x04 \x01(\x0e\x32O.google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.State\x12w\n\x12provisioning_issue\x18\x03 \x01(\x0b\x32[.google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.ProvisioningIssue\x12\x86\x01\n\x1a\x61uthorization_attempt_info\x18\x05 \x03(\x0b\x32\x62.google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.AuthorizationAttemptInfo\x1a\xe5\x01\n\x11ProvisioningIssue\x12r\n\x06reason\x18\x01 \x01(\x0e\x32\x62.google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.ProvisioningIssue.Reason\x12\x0f\n\x07\x64\x65tails\x18\x02 \x01(\t\"K\n\x06Reason\x12\x16\n\x12REASON_UNSPECIFIED\x10\x00\x12\x17\n\x13\x41UTHORIZATION_ISSUE\x10\x01\x12\x10\n\x0cRATE_LIMITED\x10\x02\x1a\xe4\x03\n\x18\x41uthorizationAttemptInfo\x12\x0e\n\x06\x64omain\x18\x01 \x01(\t\x12w\n\x05state\x18\x02 \x01(\x0e\x32h.google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.AuthorizationAttemptInfo.State\x12\x88\x01\n\x0e\x66\x61ilure_reason\x18\x03 \x01(\x0e\x32p.google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.AuthorizationAttemptInfo.FailureReason\x12\x0f\n\x07\x64\x65tails\x18\x04 \x01(\t\"K\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x0f\n\x0b\x41UTHORIZING\x10\x01\x12\x0e\n\nAUTHORIZED\x10\x06\x12\n\n\x06\x46\x41ILED\x10\x07\"V\n\rFailureReason\x12\x1e\n\x1a\x46\x41ILURE_REASON_UNSPECIFIED\x10\x00\x12\n\n\x06\x43ONFIG\x10\x01\x12\x07\n\x03\x43\x41\x41\x10\x02\x12\x10\n\x0cRATE_LIMITED\x10\x03\"H\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x10\n\x0cPROVISIONING\x10\x01\x12\n\n\x06\x46\x41ILED\x10\x02\x12\n\n\x06\x41\x43TIVE\x10\x03\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"$\n\x05Scope\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x0e\n\nEDGE_CACHE\x10\x01\x42\x06\n\x04type\"\xe2\x04\n\x0e\x43\x65rtificateMap\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12/\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bupdate_time\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12U\n\x06labels\x18\x03 \x03(\x0b\x32\x45.google.events.cloud.certificatemanager.v1.CertificateMap.LabelsEntry\x12Z\n\x0cgclb_targets\x18\x04 \x03(\x0b\x32\x44.google.events.cloud.certificatemanager.v1.CertificateMap.GclbTarget\x1a\xe8\x01\n\nGclbTarget\x12\x1c\n\x12target_https_proxy\x18\x01 \x01(\tH\x00\x12\x1a\n\x10target_ssl_proxy\x18\x03 \x01(\tH\x00\x12\x61\n\nip_configs\x18\x02 \x03(\x0b\x32M.google.events.cloud.certificatemanager.v1.CertificateMap.GclbTarget.IpConfig\x1a-\n\x08IpConfig\x12\x12\n\nip_address\x18\x01 \x01(\t\x12\r\n\x05ports\x18\x03 \x03(\rB\x0e\n\x0ctarget_proxy\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xac\x04\n\x13\x43\x65rtificateMapEntry\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\t \x01(\t\x12/\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12Z\n\x06labels\x18\x04 \x03(\x0b\x32J.google.events.cloud.certificatemanager.v1.CertificateMapEntry.LabelsEntry\x12\x12\n\x08hostname\x18\x05 \x01(\tH\x00\x12Y\n\x07matcher\x18\n \x01(\x0e\x32\x46.google.events.cloud.certificatemanager.v1.CertificateMapEntry.MatcherH\x00\x12\x14\n\x0c\x63\x65rtificates\x18\x07 \x03(\t\x12\x46\n\x05state\x18\x08 \x01(\x0e\x32\x37.google.events.cloud.certificatemanager.v1.ServingState\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"/\n\x07Matcher\x12\x17\n\x13MATCHER_UNSPECIFIED\x10\x00\x12\x0b\n\x07PRIMARY\x10\x01\x42\x07\n\x05match\"\xda\x03\n\x10\x44nsAuthorization\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12W\n\x06labels\x18\x04 \x03(\x0b\x32G.google.events.cloud.certificatemanager.v1.DnsAuthorization.LabelsEntry\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x0e\n\x06\x64omain\x18\x06 \x01(\t\x12j\n\x13\x64ns_resource_record\x18\n \x01(\x0b\x32M.google.events.cloud.certificatemanager.v1.DnsAuthorization.DnsResourceRecord\x1a=\n\x11\x44nsResourceRecord\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\t\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"z\n\x19\x44nsAuthorizationEventData\x12Q\n\x07payload\x18\x01 \x01(\x0b\x32;.google.events.cloud.certificatemanager.v1.DnsAuthorizationH\x00\x88\x01\x01\x42\n\n\x08_payload\"\x8c\x01\n\"CertificateIssuanceConfigEventData\x12Z\n\x07payload\x18\x01 \x01(\x0b\x32\x44.google.events.cloud.certificatemanager.v1.CertificateIssuanceConfigH\x00\x88\x01\x01\x42\n\n\x08_payload\"\x80\x01\n\x1c\x43\x65rtificateMapEntryEventData\x12T\n\x07payload\x18\x01 \x01(\x0b\x32>.google.events.cloud.certificatemanager.v1.CertificateMapEntryH\x00\x88\x01\x01\x42\n\n\x08_payload\"v\n\x17\x43\x65rtificateMapEventData\x12O\n\x07payload\x18\x01 \x01(\x0b\x32\x39.google.events.cloud.certificatemanager.v1.CertificateMapH\x00\x88\x01\x01\x42\n\n\x08_payload\"p\n\x14\x43\x65rtificateEventData\x12L\n\x07payload\x18\x01 \x01(\x0b\x32\x36.google.events.cloud.certificatemanager.v1.CertificateH\x00\x88\x01\x01\x42\n\n\x08_payload*F\n\x0cServingState\x12\x1d\n\x19SERVING_STATE_UNSPECIFIED\x10\x00\x12\n\n\x06\x41\x43TIVE\x10\x01\x12\x0b\n\x07PENDING\x10\x02\x42\x91\x01\xaa\x02\x32Google.Events.Protobuf.Cloud.CertificateManager.V1\xca\x02)Google\\Events\\Cloud\\CertificateManager\\V1\xea\x02-Google::Events::Cloud::CertificateManager::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.protobuf.Duration", "google/protobuf/duration.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Events
    module Cloud
      module CertificateManager
        module V1
          CertificateIssuanceConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig").msgclass
          CertificateIssuanceConfig::CertificateAuthorityConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfig").msgclass
          CertificateIssuanceConfig::CertificateAuthorityConfig::CertificateAuthorityServiceConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfig.CertificateAuthorityServiceConfig").msgclass
          CertificateIssuanceConfig::KeyAlgorithm = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateIssuanceConfig.KeyAlgorithm").enummodule
          Certificate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate").msgclass
          Certificate::SelfManagedCertificate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.SelfManagedCertificate").msgclass
          Certificate::ManagedCertificate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate").msgclass
          Certificate::ManagedCertificate::ProvisioningIssue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.ProvisioningIssue").msgclass
          Certificate::ManagedCertificate::ProvisioningIssue::Reason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.ProvisioningIssue.Reason").enummodule
          Certificate::ManagedCertificate::AuthorizationAttemptInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.AuthorizationAttemptInfo").msgclass
          Certificate::ManagedCertificate::AuthorizationAttemptInfo::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.AuthorizationAttemptInfo.State").enummodule
          Certificate::ManagedCertificate::AuthorizationAttemptInfo::FailureReason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.AuthorizationAttemptInfo.FailureReason").enummodule
          Certificate::ManagedCertificate::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.ManagedCertificate.State").enummodule
          Certificate::Scope = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.Certificate.Scope").enummodule
          CertificateMap = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateMap").msgclass
          CertificateMap::GclbTarget = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateMap.GclbTarget").msgclass
          CertificateMap::GclbTarget::IpConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateMap.GclbTarget.IpConfig").msgclass
          CertificateMapEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateMapEntry").msgclass
          CertificateMapEntry::Matcher = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateMapEntry.Matcher").enummodule
          DnsAuthorization = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.DnsAuthorization").msgclass
          DnsAuthorization::DnsResourceRecord = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.DnsAuthorization.DnsResourceRecord").msgclass
          DnsAuthorizationEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.DnsAuthorizationEventData").msgclass
          CertificateIssuanceConfigEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateIssuanceConfigEventData").msgclass
          CertificateMapEntryEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateMapEntryEventData").msgclass
          CertificateMapEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateMapEventData").msgclass
          CertificateEventData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.CertificateEventData").msgclass
          ServingState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.events.cloud.certificatemanager.v1.ServingState").enummodule
        end
      end
    end
  end
end
